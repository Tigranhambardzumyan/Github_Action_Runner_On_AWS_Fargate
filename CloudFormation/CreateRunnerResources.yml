AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  PAT:
    Description: Set the Github Personal Access Token
    Type: String
  OWNER:
    Description: Set the Github Repository Owner Name
    Type: String
  REPO:
    Description: Set the Github Repository Name
    Type: String    
  Subnets:
    Description: The Subnet will be attached to Fargate instance
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroups:
    Description: The Security Group will be attached to Fargate instance
    Type: List<AWS::EC2::SecurityGroup::Id>    
  EKRImage:
    Description: Set The Docker image ID
    Type: String      


Resources:
  SecretManager1:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: Github Personal Access Token
      Name: PAT
      SecretString: !Sub 
      - '{"Key": "PAT","Value": "${pat}"}'
      - { pat: !Ref PAT }
  SecretManager2:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: Github Personal Access Token
      Name: owner
      SecretString: !Sub 
      - '{"Key": "PAT","Value": "${owner}"}'
      - { owner: !Ref OWNER }
  SecretManager3:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: Github Personal Access Token
      Name: repo
      SecretString: !Sub 
      - '{"Key": "PAT","Value": "${repo}"}'
      - { repo: !Ref REPO }      
  
  SSMParameter1:
    Type: AWS::SSM::Parameter
    Properties:
      Name: fargate_subnet
      Type: String
      Value: !Select [ 0, !Ref SecurityGroups ]
  SSMParameter2:
    Type: AWS::SSM::Parameter
    Properties:
      Name: fargate_sg
      Type: String
      Value: !Select [ 0, !Ref Subnets ]

  CreateTaskDefinition:    
    Type: AWS::ECS::TaskDefinition
    Properties: 
      RequiresCompatibilities:
        - "FARGATE"
      ContainerDefinitions: 
        - 
          Name: "Github-Runner"
          Image: !Ref EKRImage
          Environment: 
            - Name: AWS_REGION
              Value: default
            - Name: RUNNER_LABELS
              Value: default
      Cpu: 2 vCPU
      ExecutionRoleArn: !Ref AccessToSecretManagerFromECSTask
      Memory: 7 GB
      # RequiresCompatibilities: 
      NetworkMode: awsvpc
      RuntimePlatform: 
          CpuArchitecture: X86_64
          OperatingSystemFamily: LINUX
      TaskRoleArn: !Ref AccessToSecretManagerFromECSTask

  AccessToSecretManagerFromECSTask: 
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AllowfromECSToSecurityParamaters
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - secretsmanager:GetResourcePolicy
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecretVersionIds
                Resource: 
                  - !Ref SecretManager1
                  - !Ref SecretManager2
                  - !Ref SecretManager3                                 
